/*
	References:
	[1] http://www.sass-lang.com/guide#topic-4 (partials)
	[2] http://www.sass-lang.com/guide#topic-5 (import sass files)
	[3] http://www.sass-lang.com/guide#topic-7 (extend/inheritence)
	[4] http://www.sass-lang.com/documentation/file.SASS_REFERENCE.html#placeholder_selectors_ (placeholders)
	[5] http://www.sass-lang.com/documentation/file.SASS_REFERENCE.html#extend
	[6] https://www.sitepoint.com/avoid-sass-extend/
	[7] http://www.sass-lang.com/guide#topic-3 (nesting)
	[8] http://www.sass-lang.com/guide#topic-2 (variables)
	[9] http://www.sass-lang.com/documentation/file.SASS_REFERENCE.html#variables_
	[10] http://www.sass-lang.com/documentation/file.SASS_REFERENCE.html#interpolation_
	[12] https://gist.github.com/jacrook/9009655 (examples of sass font stacks)
	[13] http://www.sass-lang.com/guide#topic-6 (mixins)
	[14] http://www.sass-lang.com/documentation/file.SASS_REFERENCE.html#mixins
	[15] http://www.sass-lang.com/documentation/file.SASS_REFERENCE.html#data_types
	[16] http://blog.teamtreehouse.com/smarter-sass-mixins-null
	[17] https://csswizardry.com/2014/11/when-to-use-extend-when-to-use-a-mixin/
	[18] http://sassbreak.com/double-ampersand-mixin/
	[19] http://www.sass-lang.com/documentation/file.SASS_REFERENCE.html#media
	[20] https://www.sitepoint.com/using-source-maps-debug-sass-chrome/#live-editing-scss-in-the-browser
	[21] http://thesassway.com/intermediate/using-source-maps-with-sass
	[22] https://robots.thoughtbot.com/sass-source-maps-chrome-magic
	[23] http://www.sass-lang.com/documentation/file.SASS_REFERENCE.html#output_style (sass output styles)


	Tools:
	[1] http://chir.ag/projects/name-that-color/#6195ED
	[2] https://www.sassmeister.com/
	[3] http://susy.oddbird.net/
	[4] https://github.com/at-import/breakpoint
	[5] http://neat.bourbon.io/ (sass grid)
	[6] http://bourbon.io/ (sass mixin library)
	[7] http://compass-style.org/ (css authoring framework)


	General References:
	[1] http://sass-lang.com/
	[2] http://thesassway.com/
	[3] http://sassbreak.com/


	When writing sass, it's generally good practice to:
	 * @extend placeholders first, @include all mixins second, write the remaining declarations last.

	Output Styles

	nested:
	$ sass --watch scss:css --style nested

	* The default output style. It reflects the structure of the CSS styles and the HTML document. Each property has its own line, and rules are indented based on how deep they're nested in the original Sass code.

	expanded:
	$ sass --watch scss:css --style expanded

	* Similar to the nested style. It looks more like the CSS we'd write in a regular style sheet. Each property and rule takes up one line and properties are indented within the rules.

	compressed:
	$ sass --watch scss:css --style compressed

	* Minifies our CSS output by stripping out comments and unnecessary spaces. It compresses CSS to one line. The most optimized output style â€“ use before uploading your CSS to the server.

	compact:
	$ sass --watch scss:css --style compact

	* Another optimized format that draws the focus to the CSS selectors instead of the properties. Each CSS rule takes up one line, with all properties defined on the same line.


 */

@import "base/index";
@import "layout/index";
@import "components/index";